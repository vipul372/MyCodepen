{"version":3,"sources":["reportWebVitals.js","Codepen/components/Editor.js","Codepen/hooks/useLocalStorage.js","Codepen/components/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Editor","props","displayName","language","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lineNumbers","lint","mode","theme","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qECyCCQ,EAtCA,SAACC,GACd,IAAQC,EAA2CD,EAA3CC,YAAaC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACtC,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OACE,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACE,sBAAKE,UAAU,eAAf,UACGP,EACD,wBACEQ,KAAK,SACLD,UAAU,sBACVE,QAAS,WACPH,GAAQ,SAACI,GAAD,OAAeA,MAJ3B,SAOE,cAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,WAGlD,cAAC,aAAD,CACEN,UAAU,sBACVO,eApBe,SAACC,EAAQC,EAAMd,GAClCC,EAASD,IAoBLA,MAAOA,EACPe,QAAS,CACPC,cAAc,EACdC,aAAa,EACbC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,kB,MCrBFC,MAjBf,SAAyBC,EAAKC,GAC5B,IAAMC,EAHO,gBAGgBF,EAC7B,EAA0BpB,oBAAS,WACjC,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GACb,oBAAjBF,EAAoCA,IACnCA,KAJd,mBAAOvB,EAAP,KAAc8B,EAAd,KAYA,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAChD,CAACwB,EAAaxB,IAEV,CAACA,EAAO8B,ICkDFI,EA9DH,WAOV,MAAwBb,EAAgB,OAAQ,IAAhD,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAsBf,EAAgB,MAAO,IAA7C,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAAoBjB,EAAgB,KAAM,IAA1C,mBAAOkB,EAAP,KAAWC,EAAX,KAEA,EAA4BtC,mBAAS,IAArC,mBAAOuC,EAAP,KAAeC,EAAf,KAeA,OAbAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAOR,KACH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,qCACE,sBAAKlC,UAAU,gBAAf,UACE,cAAC,EAAD,CACEP,YAAY,OACZC,SAAS,MACTC,MAAOmC,EACPlC,SAAUmC,IAEZ,cAAC,EAAD,CACEtC,YAAY,MACZC,SAAS,MACTC,MAAOqC,EACPpC,SAAUqC,IAEZ,cAAC,EAAD,CACExC,YAAY,aACZC,SAAS,aACTC,MAAOuC,EACPtC,SAAUuC,OAGd,qBAAKnC,UAAU,OAAf,SACE,wBACEoC,OAAQA,EACRK,MAAM,SACNC,QAAQ,eACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eCpDjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1BpE,M","file":"static/js/main.9c783ab9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from \"react\"\r\nimport \"codemirror/lib/codemirror.css\"\r\nimport \"codemirror/theme/material.css\"\r\nimport \"codemirror/mode/xml/xml\"\r\nimport \"codemirror/mode/javascript/javascript\"\r\nimport \"codemirror/mode/css/css\"\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Editor = (props) => {\r\n  const { displayName, language, value, onChange } = props\r\n  const [open, setOpen] = useState(true)\r\n\r\n  const handleChange = (editor, data, value) => {\r\n    onChange(value)\r\n  }\r\n\r\n  return (\r\n    <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\r\n      <div className=\"editor-title\">\r\n        {displayName}\r\n        <button\r\n          type=\"button\"\r\n          className=\"expand-collapse-btn\"\r\n          onClick={() => {\r\n            setOpen((prevOpen) => !prevOpen)\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n        </button>\r\n      </div>\r\n      <CodeMirror\r\n        className=\"code-mirror-wrapper\"\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        options={{\r\n          lineWrapping: true,\r\n          lineNumbers: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: \"material\",\r\n        }}\r\n      ></CodeMirror>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Editor\r\n","import { useState, useEffect } from \"react\"\r\nconst prefix = \"Codepen-clone\"\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  const prefixedKey = prefix + key\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n    if (typeof initialValue === \"function\") return initialValue()\r\n    else return initialValue\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}\r\n\r\nexport default useLocalStorage\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Editor from \"./Editor\"\r\nimport \"../styles/App.css\"\r\nimport useLocalStorage from \"../hooks/useLocalStorage\"\r\n\r\nconst App = () => {\r\n  // without localStorage\r\n  // const [html, setHtml] = useState(\"\")\r\n  // const [css, setCss] = useState(\"\")\r\n  // const [js, setJs] = useState(\"\")\r\n\r\n  //with localStorage\r\n  const [html, setHtml] = useLocalStorage(\"html\", \"\")\r\n  const [css, setCss] = useLocalStorage(\"css\", \"\")\r\n  const [js, setJs] = useLocalStorage(\"js\", \"\")\r\n \r\n  const [srcDoc, setSrcDoc] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setSrcDoc(`\r\n        <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script>${js}</script>\r\n        </html>\r\n      `)\r\n    }, 250)\r\n    return () => clearTimeout(timeout)\r\n  }, [html, css, js])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pane top-pane\">\r\n        <Editor\r\n          displayName=\"HTML\"\r\n          language=\"xml\"\r\n          value={html}\r\n          onChange={setHtml}\r\n        />\r\n        <Editor\r\n          displayName=\"CSS\"\r\n          language=\"css\"\r\n          value={css}\r\n          onChange={setCss}\r\n        />\r\n        <Editor\r\n          displayName=\"JavaScript\"\r\n          language=\"javascript\"\r\n          value={js}\r\n          onChange={setJs}\r\n        />\r\n      </div>\r\n      <div className=\"pane\">\r\n        <iframe\r\n          srcDoc={srcDoc}\r\n          title=\"Output\"\r\n          sandbox=\"allow-script\"\r\n          frameBorder=\"0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        ></iframe>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals'; \n\nimport App from './Codepen/components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}